version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
      #command: gunicorn main.wsgi -b 0.0.0.0:8000
    command: bash -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn main.wsgi -b 0.0.0.0:8000"
    volumes:
      - ./backend:/app/backend/
      - ./backend/static:/static
    ports:
      - 8000:8000
    depends_on:
      - db
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    command: npm run build
    volumes:
      - ./frontend:/app/frontend/
    depends_on:
      - backend
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

        #letsencrypt:
        #image: jrcs/letsencrypt-nginx-proxy-companion
        #restart: always
    #environment:
    #- NGINX_PROXY_CONTAINER=nginx-proxy
    #volumes:
    #  - certs:/etc/nginx/certs:rw
    #  - vhostd:/etc/nginx/vhost.d
    #  - html:/usr/share/nginx/html
    #  - /var/run/docker.sock:/var/run/docker.sock:ro
  nginx:
    image: nginx:latest
    expose:
      - "80"
    environment:
      - VIRTUAL_HOST=wolvesweb.tech,www.wolvesweb.tech
        #- LETSENCRYPT_HOST=wolvesweb.tech,www.wolvesweb.tech
        #- LETSENCRYPT_EMAIL=teamwolvescode@gmail.com
    volumes:
      - ./webserver/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend/static:/static
      - ./frontend/dist://usr/share/nginx/html:ro
    depends_on:
      - backend
      - nginx-proxy
      #- letsencryp
volumes: 
  certs:
  html:
  vhostd:
